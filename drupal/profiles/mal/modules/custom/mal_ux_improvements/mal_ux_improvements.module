<?php

/**
 * @file
 * Contains mal_ux_improvements.module
 */

/**
 * Implements hook_views_api().
 */
function mal_ux_improvements_views_api() {
  return array('api' => 3.0);
}

/**
 * Implements hook_form_FORM_TYPE_alter().
 */
function mal_ux_improvements_form_node_form_alter(&$form, &$form_state) {
  $form['#attached']['css'][] = drupal_get_path('module', 'mal_ux_improvements') . '/mal_ux_improvements.css';
  $form['options']['#access'] = FALSE;
}

/**
 * Implements hook_navbar().
 */
function mal_ux_improvements_navbar() {
  $items = array();
  $items['mal_help_link'] = array(
    '#type' => 'navbar_item',
    'tab' => array(
      '#type' => 'link',
      '#title' => t('Help'),
      '#href' => variable_get('mal_help_link', 'http://drupal.org'),
      '#options' => array(
        'attributes' => array('target' => '_blank'),
      ),
    ),
    '#weight' => 100,
    '#wrapper_attributes' => array(
      'class' => array('pull-right'),
    ),
  );

  return $items;
}

/**
 * Implements hook_update_projects_alter().
 */
function mal_ux_improvements_update_projects_alter(&$projects) {
  $projects['panels']['info']['version'] = '7.x-3.x-dev';
}

/**
 * Implements hook_views_query_alter().
 */
function mal_ux_improvements_views_query_alter(&$view, &$query) {
  global $user;

  if (($view->name == 'new_administration_nodes')
  ) {
    // Custom query for non Kursmall filter. Exclude kursmall results when
    // course or course_package selected.
    if (!in_array($view->exposed_raw_input['type'], array('All', 'course_template'))) {
      // Exclude kursmall if checked course ore course_template.
      if (isset($query->where[2])) {
        unset($query->where[2]);
      }
    }

    // Set up "contextual filter" - filter results by user's schools.
    $account = user_load($user->uid);
    $field_items = field_get_items('user', $account, 'field_user_school');

    if ($field_items) {
      $target_ids = array();

      foreach ($field_items as $item) {
        $target_ids[] = $item['target_id'];
      }

      $and = db_and()
        ->condition('field_data_field_course_school.field_course_school_target_id', $target_ids, 'IN');
      $query->add_where(1, $and);
    }
  }
}
